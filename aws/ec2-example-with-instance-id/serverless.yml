service: ${env:SERVICE_NAME, 'StartStopEC2Instance'}
frameworkVersion: '3'
package:
  individually: true
plugins:
  - serverless-offline
  - serverless-python-requirements

useDotenv: true

provider:
  name: aws
  runtime: python3.9
  stage: ${opt:stage, env:STAGE, 'local'}
  region: ${opt:region, env:AWS_REGION, 'us-east-1'}
  profile: ${opt:aws-profile, env:AWS_PROFILE, ''}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ec2:DescribeInstanceStatus
        - ec2:DescribeInstances
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - ec2:StartInstances
        - ec2:StopInstances
      Resource:
        - Fn::Join:
            - ":"
            - - "arn:aws:ec2"
              - Ref: AWS::Region
              - Ref: AWS::AccountId
              - Fn::Join:
                  - "/"
                  - - "instance"
                    - Ref: EC2Instance

resources:
  - ${file(./resource/SecurityGroup.yaml)}
  - ${file(./resource/EC2Instance.yaml)}
  - ${file(./resource/VPC.yaml)}
  - ${file(./resource/VPCSubnet.yaml)}
  - ${file(./resource/Outputs.yaml)}

functions:
  startInstance:
    handler: src/handlers/start-handler.start
    events:
      - schedule: ${env:START_INSTANCE, 'cron(0 0 * * ? *)'}
    environment:
      EC2_INSTANCE_ID: !Ref EC2Instance
  stopInstance:
    handler: src/handlers/stop-handler.stop
    events:
      - schedule: ${env:STOP_INSTANCE, 'cron(0 0 * * ? *)'}
    environment:
      EC2_INSTANCE_ID: !Ref EC2Instance
